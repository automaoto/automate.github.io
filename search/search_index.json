{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to <code>maoto-agent</code> Package","text":"<p>For full documentation visit docs.maoto.world.</p>"},{"location":"#sections","title":"Sections","text":"<ul> <li>Installation Guide - How to install and use <code>maoto-agent</code>.</li> <li>Stable Version - View the latest stable version here.</li> <li>Beta Version - Checkout what's coming next here.</li> </ul>"},{"location":"beta/api/","title":"Beta Version","text":"<p>This section contains the latest beta release API documentation.</p>"},{"location":"beta/api/#maoto_agent.Maoto","title":"<code>Maoto</code>","text":""},{"location":"beta/api/#maoto_agent.Maoto.EventDrivenQueueProcessor","title":"<code>EventDrivenQueueProcessor</code>","text":""},{"location":"beta/api/#maoto_agent.Maoto.EventDrivenQueueProcessor.cleanup","title":"<code>cleanup()</code>","text":"<p>Cleanup function to ensure graceful termination.</p>"},{"location":"beta/api/#maoto_agent.Maoto.ServerMode","title":"<code>ServerMode</code>","text":""},{"location":"beta/api/#maoto_agent.Maoto.ServerMode.shutdown","title":"<code>shutdown()</code>  <code>async</code>","text":"<p>Actions to perform on application shutdown.</p>"},{"location":"beta/api/#maoto_agent.Maoto.ServerMode.startup","title":"<code>startup()</code>  <code>async</code>","text":"<p>Actions to perform on application startup.</p>"},{"location":"beta/api/#maoto_agent.Maoto._handle_subscription_event","title":"<code>_handle_subscription_event(task_queue, result)</code>  <code>async</code>","text":"<p>Handle the result of the subscription. Identify the event type via __typename, instantiate the corresponding event object, and put it on the queue.</p>"},{"location":"beta/api/#maoto_agent.Maoto._run_subscription_with_reconnect","title":"<code>_run_subscription_with_reconnect(task_queue, subscription, stop_event)</code>  <code>async</code>","text":"<p>This method continuously attempts to subscribe. If the subscription breaks, it retries (unless stop_event is set), using randomized exponential backoff.</p>"},{"location":"beta/api/#maoto_agent.Maoto._shutdown_db_conn_pool","title":"<code>_shutdown_db_conn_pool()</code>  <code>async</code>","text":"<p>Disconnect from the database.</p>"},{"location":"beta/api/#maoto_agent.Maoto._startup_db_conn_pool","title":"<code>_startup_db_conn_pool()</code>  <code>async</code>","text":"<p>Establish a database connection with automatic reconnection.</p>"},{"location":"beta/api/#maoto_agent.Maoto.execute","title":"<code>execute(query, values=None)</code>  <code>async</code>","text":"<p>Execute an INSERT, UPDATE, or DELETE statement.</p>"},{"location":"beta/api/#maoto_agent.Maoto.fetch_all","title":"<code>fetch_all(query, values=None)</code>  <code>async</code>","text":"<p>Fetch multiple records from the database.</p>"},{"location":"beta/api/#maoto_agent.Maoto.transaction","title":"<code>transaction()</code>  <code>async</code>","text":"<p>Return an async context manager so that <code>async with agent.transaction(): ...</code> works.</p>"},{"location":"stable/api/","title":"Latest Stable Version","text":"<p>This section contains the latest stable release API documentation.</p>"},{"location":"stable/api/#maoto_agent.Maoto","title":"<code>Maoto</code>","text":""},{"location":"stable/api/#maoto_agent.Maoto.EventDrivenQueueProcessor","title":"<code>EventDrivenQueueProcessor</code>","text":""},{"location":"stable/api/#maoto_agent.Maoto.EventDrivenQueueProcessor.cleanup","title":"<code>cleanup()</code>","text":"<p>Cleanup function to ensure graceful termination.</p>"},{"location":"stable/api/#maoto_agent.Maoto.ServerMode","title":"<code>ServerMode</code>","text":""},{"location":"stable/api/#maoto_agent.Maoto.ServerMode.shutdown","title":"<code>shutdown()</code>  <code>async</code>","text":"<p>Actions to perform on application shutdown.</p>"},{"location":"stable/api/#maoto_agent.Maoto.ServerMode.startup","title":"<code>startup()</code>  <code>async</code>","text":"<p>Actions to perform on application startup.</p>"},{"location":"stable/api/#maoto_agent.Maoto._handle_subscription_event","title":"<code>_handle_subscription_event(task_queue, result)</code>  <code>async</code>","text":"<p>Handle the result of the subscription. Identify the event type via __typename, instantiate the corresponding event object, and put it on the queue.</p>"},{"location":"stable/api/#maoto_agent.Maoto._run_subscription_with_reconnect","title":"<code>_run_subscription_with_reconnect(task_queue, subscription, stop_event)</code>  <code>async</code>","text":"<p>This method continuously attempts to subscribe. If the subscription breaks, it retries (unless stop_event is set), using randomized exponential backoff.</p>"},{"location":"stable/api/#maoto_agent.Maoto._shutdown_db_conn_pool","title":"<code>_shutdown_db_conn_pool()</code>  <code>async</code>","text":"<p>Disconnect from the database.</p>"},{"location":"stable/api/#maoto_agent.Maoto._startup_db_conn_pool","title":"<code>_startup_db_conn_pool()</code>  <code>async</code>","text":"<p>Establish a database connection with automatic reconnection.</p>"},{"location":"stable/api/#maoto_agent.Maoto.execute","title":"<code>execute(query, values=None)</code>  <code>async</code>","text":"<p>Execute an INSERT, UPDATE, or DELETE statement.</p>"},{"location":"stable/api/#maoto_agent.Maoto.fetch_all","title":"<code>fetch_all(query, values=None)</code>  <code>async</code>","text":"<p>Fetch multiple records from the database.</p>"},{"location":"stable/api/#maoto_agent.Maoto.transaction","title":"<code>transaction()</code>  <code>async</code>","text":"<p>Return an async context manager so that <code>async with agent.transaction(): ...</code> works.</p>"}]}